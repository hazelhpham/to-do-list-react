{"ast":null,"code":"import _toConsumableArray from\"/Users/hazel/Desktop/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/hazel/Desktop/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hazel/Desktop/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import AddTask from\"./components/AddTask\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([{id:1,text:\"Learn React\",day:\"2/6/2021\",reminder:true},{id:2,text:\"Email professor\",day:\"2/6/2021\",reminder:true},{id:3,text:\"Exercise\",day:\"2/6/2021\",reminder:true},{id:4,text:\"Internships\",day:\"2/6/2021\",reminder:false}]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showAddTask=_useState4[0],setShowAddTask=_useState4[1];//Add Task\nvar addTask=function addTask(task){var id=Math.floor(Math.random()*10000)+1;var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};//the logic behind this setState function\n//change the state of the list of tasks\n//filter out: only showing the id that is different from the selected it\nvar deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};//Toggle reminder\nvar toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{title:\"Task Tracker\",onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):\"No tasks to show\"]})// always in the big div className App\n//if x is true return yes; otherwise no\n;}export default App;","map":{"version":3,"sources":["/Users/hazel/Desktop/react-project/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","id","text","day","reminder","tasks","setTasks","showAddTask","setShowAddTask","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":"kdAAA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BD,QAAQ,CAAC,CACjC,CAAEE,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,aAAf,CAA8BC,GAAG,CAAE,UAAnC,CAA+CC,QAAQ,CAAE,IAAzD,CADiC,CAEjC,CAAEH,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,iBAAf,CAAkCC,GAAG,CAAE,UAAvC,CAAmDC,QAAQ,CAAE,IAA7D,CAFiC,CAGjC,CAAEH,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,UAAf,CAA2BC,GAAG,CAAE,UAAhC,CAA4CC,QAAQ,CAAE,IAAtD,CAHiC,CAIjC,CAAEH,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,aAAf,CAA8BC,GAAG,CAAE,UAAnC,CAA+CC,QAAQ,CAAE,KAAzD,CAJiC,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAMA,eAAsCP,QAAQ,CAAC,KAAD,CAA9C,yCAAOQ,WAAP,eAAoBC,cAApB,eAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,GAAMT,CAAAA,EAAE,CAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,EAAoC,CAA/C,CACA,GAAMC,CAAAA,OAAO,gBAAKb,EAAE,CAAFA,EAAL,EAAYS,IAAZ,CAAb,CACAJ,QAAQ,8BAAKD,KAAL,GAAYS,OAAZ,GAAR,CACD,CAJD,CAMA;AACA;AACA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACd,EAAD,CAAQ,CACzBK,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAa,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACD,CAFD,CAGA;AACA,GAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAChB,EAAD,CAAQ,CAC7BK,QAAQ,CACND,KAAK,CAACa,GAAN,CAAU,SAACR,IAAD,QACRA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAZ,gCAAsBS,IAAtB,MAA4BN,QAAQ,CAAE,CAACM,IAAI,CAACN,QAA5C,GAAyDM,IADjD,EAAV,CADM,CAAR,CAKD,CAND,CAQA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EACE,KAAK,CAAC,cADR,CAEE,KAAK,CAAE,uBAAMF,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAFT,CAGE,OAAO,CAAEA,WAHX,EADF,CAMGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEE,OAAhB,EANlB,CAOGJ,KAAK,CAACc,MAAN,CAAe,CAAf,cACC,KAAC,KAAD,EAAO,KAAK,CAAEd,KAAd,CAAqB,QAAQ,CAAEU,UAA/B,CAA2C,QAAQ,CAAEE,cAArD,EADD,CAGC,kBAVJ,GAaA;AACA;AAfF,CAiBD,CAED,cAAejB,CAAAA,GAAf","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { id: 1, text: \"Learn React\", day: \"2/6/2021\", reminder: true },\n    { id: 2, text: \"Email professor\", day: \"2/6/2021\", reminder: true },\n    { id: 3, text: \"Exercise\", day: \"2/6/2021\", reminder: true },\n    { id: 4, text: \"Internships\", day: \"2/6/2021\", reminder: false },\n  ]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //the logic behind this setState function\n  //change the state of the list of tasks\n  //filter out: only showing the id that is different from the selected it\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  //Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n    // always in the big div className App\n    //if x is true return yes; otherwise no\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}