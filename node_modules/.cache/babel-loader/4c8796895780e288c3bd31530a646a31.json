{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/Desktop/learn-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Learn React\",\n    day: '2/6/2021',\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Email professor\",\n    day: '2/6/2021',\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Fuck you\",\n    day: '2/6/2021',\n    reminder: true\n  }, {\n    id: 4,\n    text: \"Internships\",\n    day: '2/6/2021',\n    reminder: false\n  }]); //Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...task, newTask]);\n  }; //the logic behind this setState function\n  //change the state of the list of tasks\n  //filter out: only showing the id that is different from the selected it \n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) // always in the big div className App \n  //if x is true return yes; otherwise no\n  ;\n}\n\n_s(App, \"MtTYm1j6OlS6owUfzb+hDN8TiS8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hazel/Desktop/learn-react/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACT,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,CAChC;AAACI,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,aAAX;AAAyBC,IAAAA,GAAG,EAAC,UAA7B;AAAwCC,IAAAA,QAAQ,EAAC;AAAjD,GADgC,EAEhC;AAACH,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,iBAAX;AAA6BC,IAAAA,GAAG,EAAC,UAAjC;AAA4CC,IAAAA,QAAQ,EAAC;AAArD,GAFgC,EAGhC;AAACH,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,UAAX;AAAsBC,IAAAA,GAAG,EAAC,UAA1B;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAHgC,EAIhC;AAACH,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,aAAX;AAAyBC,IAAAA,GAAG,EAAC,UAA7B;AAAwCC,IAAAA,QAAQ,EAAC;AAAjD,GAJgC,CAAD,CAAjC,CADS,CAQX;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAS;AACvB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAACT,MAAAA,EAAD;AAAI,SAAGK;AAAP,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGM,IAAJ,EAAUI,OAAV,CAAD,CAAR;AACD,GAJD,CATW,CAeX;AACA;AACA;;;AACA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAlBW,CAqBX;;;AACA,QAAMY,cAAc,GAAIZ,EAAD,IAAO;AAC5BD,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWR,IAAD,IAASA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGK,IAAJ;AAASF,MAAAA,QAAQ,EAAE,CAACE,IAAI,CAACF;AAAzB,KAAjB,GAAsDE,IAAzE,CAAD,CAAR;AACD,GAFD;;AAGF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKN,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEY,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA4F,kBAHjG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAME;AACA;AAPF;AAUD;;GAnCQf,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport {useState} from 'react'\n\nfunction App() {\n      const [tasks,setTasks] = useState([\n        {id:1,text:\"Learn React\",day:'2/6/2021',reminder:true,},\n        {id:2,text:\"Email professor\",day:'2/6/2021',reminder:true,},\n        {id:3,text:\"Fuck you\",day:'2/6/2021',reminder:true,},\n        {id:4,text:\"Internships\",day:'2/6/2021',reminder:false,},\n    ])\n\n    //Add Task\n    const addTask = (task) =>{\n      const id = Math.floor(Math.random() * 10000) + 1\n      const newTask = {id,...task}\n      setTasks([...task, newTask])\n    }\n\n    //the logic behind this setState function\n    //change the state of the list of tasks\n    //filter out: only showing the id that is different from the selected it \n    const deleteTask = (id) => {\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n    //Toggle reminder\n    const toggleReminder = (id) =>{\n      setTasks(tasks.map((task)=> task.id === id ? {...task,reminder: !task.reminder} : task))\n    }\n  return (\n    <div className=\"container\">\n        <Header title=\"Task Tracker\"/>\n        <AddTask onAdd={addTask}/>\n        {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No tasks to show'}\n    </div>\n    // always in the big div className App \n    //if x is true return yes; otherwise no\n\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}