{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/Desktop/learn-react/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\n// const tasks = [\n//     {id:1,text:'Learn React',day:'2/6/2021',reminder:true,},\n//     {id:2,text:'Email professor',day:'2/6/2021',reminder:true,},\n//     {id:3,text:'Fuck you',day:'2/6/2021',reminder:true,},\n//     {id:4,text:'Internships',day:'2/6/2021',reminder:false,},\n// ] \n//use STATE for database\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [tasks, setTasks] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", task.text, \" \"]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this))\n  }, void 0, false);\n};\n\n_s(Tasks, \"HBKVX4r+7T9mWaUs9V+oq8ayhAo=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/hazel/Desktop/learn-react/src/components/Tasks.js"],"names":["useState","Tasks","tasks","setTasks","map","task","text","id"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,EAAjC;AACA,sBACI;AAAA,cACIE,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT;AAAA,sBAAoBA,IAAI,CAACC,IAAzB;AAAA,OAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADJ,mBADJ;AAOH,CATD;;GAAMN,K;;KAAAA,K;AAWN,eAAeA,KAAf","sourcesContent":["// const tasks = [\n//     {id:1,text:'Learn React',day:'2/6/2021',reminder:true,},\n//     {id:2,text:'Email professor',day:'2/6/2021',reminder:true,},\n//     {id:3,text:'Fuck you',day:'2/6/2021',reminder:true,},\n//     {id:4,text:'Internships',day:'2/6/2021',reminder:false,},\n// ] \n//use STATE for database\nimport {useState} from 'react'\nconst Tasks = () => {\n    const [tasks,setTasks] = useState()\n    return (\n        <>\n           {tasks.map((task)=>\n            (<h3 key={task.id}> {task.text} </h3>))}\n            {/* warning error: each child should have unique key prop */}\n        </>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}