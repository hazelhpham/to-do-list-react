{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/Desktop/react-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Learn React\",\n    day: \"2/6/2021\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Email professor\",\n    day: \"2/6/2021\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Exercise\",\n    day: \"2/6/2021\",\n    reminder: true\n  }, {\n    id: 4,\n    text: \"Internships\",\n    day: \"2/6/2021\",\n    reminder: false\n  }]);\n  const [showAddTask, setShowAddTask] = useState(false); //Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //the logic behind this setState function\n  //change the state of the list of tasks\n  //filter out: only showing the id that is different from the selected it\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAddTask: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : \"No tasks to show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) // always in the big div className App\n  //if x is true return yes; otherwise no\n  ;\n}\n\n_s(App, \"kug5u4zEvNc4rT85vouAos+nzcU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hazel/Desktop/react-project/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","tasks","setTasks","id","text","day","reminder","showAddTask","setShowAddTask","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;AAAEI,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,aAAf;AAA8BC,IAAAA,GAAG,EAAE,UAAnC;AAA+CC,IAAAA,QAAQ,EAAE;AAAzD,GADiC,EAEjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,iBAAf;AAAkCC,IAAAA,GAAG,EAAE,UAAvC;AAAmDC,IAAAA,QAAQ,EAAE;AAA7D,GAFiC,EAGjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,UAAf;AAA2BC,IAAAA,GAAG,EAAE,UAAhC;AAA4CC,IAAAA,QAAQ,EAAE;AAAtD,GAHiC,EAIjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,aAAf;AAA8BC,IAAAA,GAAG,EAAE,UAAnC;AAA+CC,IAAAA,QAAQ,EAAE;AAAzD,GAJiC,CAAD,CAAlC;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C,CAPa,CASb;;AACA,QAAMU,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMP,EAAE,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEX,MAAAA,EAAF;AAAM,SAAGO;AAAT,KAAhB;AACAR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACD,GAJD,CAVa,CAgBb;AACA;AACA;;;AACA,QAAMC,UAAU,GAAIZ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAnBa,CAsBb;;;AACA,QAAMc,cAAc,GAAId,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACiB,GAAN,CAAWR,IAAD,IACRA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGO,IAAL;AAAWJ,MAAAA,QAAQ,EAAE,CAACI,IAAI,CAACJ;AAA3B,KAAjB,GAAyDI,IAD3D,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,MAAMF,cAAc,CAAC,CAACD,WAAF,CAF7B;AAGE,MAAA,WAAW,EAAEA;AAHf;AAAA;AAAA;AAAA;AAAA,YADF,EAMGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,YANlB,EAOGR,KAAK,CAACkB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,KAAd;AAAqB,MAAA,QAAQ,EAAEc,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AAfF;AAiBD;;GAhDQjB,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { id: 1, text: \"Learn React\", day: \"2/6/2021\", reminder: true },\n    { id: 2, text: \"Email professor\", day: \"2/6/2021\", reminder: true },\n    { id: 3, text: \"Exercise\", day: \"2/6/2021\", reminder: true },\n    { id: 4, text: \"Internships\", day: \"2/6/2021\", reminder: false },\n  ]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //the logic behind this setState function\n  //change the state of the list of tasks\n  //filter out: only showing the id that is different from the selected it\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  //Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAddTask={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n    // always in the big div className App\n    //if x is true return yes; otherwise no\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}