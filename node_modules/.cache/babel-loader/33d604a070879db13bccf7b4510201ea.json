{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/Desktop/react-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id},{\n    }`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : \"No tasks to show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) // always in the big div className App\n  //if x is true return yes; otherwise no\n  ;\n}\n\n_s(App, \"PLX2zQ+tVGuPD20Z1DPltP04Zzk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hazel/Desktop/react-project/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","tasks","setTasks","showAddTask","setShowAddTask","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","deleteTask","id","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACAC,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAL,MAAAA,QAAQ,CAACI,eAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAMA,QAAME,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAA+B;AACtDK,MAAAA,MAAM,EAAC,MAD+C;AAEtDC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV,OAF8C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALgD,KAA/B,CAAvB;AAOF,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUS,IAAV,CAAD,CAAR;AACC,GAVD;;AAaA,QAAMS,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMX,KAAK,CAAE,+BAA8BW,EAAG;AAClD,MADe,EACP;AAACN,MAAAA,MAAM,EAAE;AAAT,KADO,CAAX;AAGAZ,IAAAA,QAAQ,CAACD,KAAK,CAACoB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GALD;;AAQA,QAAME,cAAc,GAAIF,EAAD,IAAQ;AAC7BlB,IAAAA,QAAQ,CACND,KAAK,CAACsB,GAAN,CAAWV,IAAD,IACRA,IAAI,CAACO,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGP,IAAL;AAAWW,MAAAA,QAAQ,EAAE,CAACX,IAAI,CAACW;AAA3B,KAAjB,GAAyDX,IAD3D,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,MAAMT,cAAc,CAAC,CAACD,WAAF,CAF7B;AAGE,MAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,EAMGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YANlB,EAOGX,KAAK,CAACwB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAExB,KAAd;AAAqB,MAAA,QAAQ,EAAEkB,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AAfF;AAiBD;;GA/DQtB,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  useEffect (() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks',{\n    method:'POST',\n    headers:{\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n  const data = await res.json()\n  setTasks([...tasks,data])\n  };\n\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id},{\n    }`, {method: 'DELETE'})\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n    // always in the big div className App\n    //if x is true return yes; otherwise no\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}